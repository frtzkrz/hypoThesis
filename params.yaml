# Define some default directories, which can then be used
# in the pipeline file `dvc.yaml`.
general:
  data: data/cleaned.csv
  samples: models/samples.hdf5
  risks: models/risks.hdf5
  prevalences: models/prevalences.hdf5
  metrics: metrics.json
  plots_dir: plots

########################################################################################
# This dictionary defines which LNLs are present in the
# graph and how they are connected. In this case, the
# primary tumors spreads to the LNLs II, III and IV.
# Subsequently, level II spreads to III and III to IV.
graph:
  tumor:
    primary: [I, II, III, IV, V, VII]
  lnl:
    I: []
    II: [I, III, V]
    III: [IV, V]
    IV: []
    V: []
    VII: []

########################################################################################
# Below are some parameters necessary for the model setup:
model:
  first_binom_prob: 0.3         # defines shape of time prior of first T-stage
  max_t: 10                     # max number of time steps to evolve system
  t_stages: [early, late]       # T-stages to consider in the data
  class: Unilateral             # model class to use (see `lymph-model` docs)
  # keyword arguments to pass to the model constructor
  kwargs:
    base_symmetric: false
    trans_symmetric: true
    use_mixing: true

########################################################################################
# Choose how to create the synthetic dataset. The currently set values
# reflect what one can see in the data (e.g. on https://lyprox.org)
synthetic:
  t_stages_dist:
    early: 0.6                  # 60% of synethetic patients are early T-stage...
    late: 0.4                   # ...and 40% late T-stage
  midline_ext_prob: 0.3         # create 30% of patients with midline extension

  # Use these made-up specificity & sensitivity values
  # to create the fake observations
  modalities:
    synth_CT: [0.85, 0.85]

########################################################################################
# Under this key we define the specficity and sensitivity for a range
# of diagnostic modalities. They are taken from literature and during
# sampling, everything that's not commented our here will be used for
# inference.
modalities:
  CT: [0.76, 0.81]
  MRI: [0.63, 0.81]
  PET: [0.86, 0.79]
  FNA: [0.98, 0.80]
  diagnostic_consensus: [0.86, 0.81]
  pathology: [1.0, 1.0]
  pCT: [0.86, 0.81]
  max_llh: [1.0, 1.0]

# these of the above modalities will be used to compute things
# like the naive maximum likelihood estimate of the true hidden
# state `max_llh`, or the `rank` "modality".
# The wird nested way of writing them down here is so that DVC can unpack the dict
# directly into the command.
data_cleaning_modalities:
  modalities:
  - CT
  - MRI
  - PET
  - FNA
  - diagnostic_consensus
  - pathology
  - pCT

# this lists the above defined modalities that will be used for
# inference and evaluation.
# The wird nested way of writing them down here is so that DVC can unpack the dict
# directly into the command.
inference_modalities:
  modalities:
  - max_llh

########################################################################################
# This defines the sampler settings and the thermodynamic integration path
sampling:
  walkers_per_dim: 20           # num of parallel walkers per parameter space dimension
  burnin: 1000                  # burn-in steps to discard
  nsteps: 50                    # do this many serious steps per sampling round
  thin_by: 5                    # draw this many samples for one step in `nsteps`
  temp_schedule:                # use this as the inverse temp schedule for TI
  - 0.0
  - 1.316872427983539e-06
  - 4.2139917695473246e-05
  - 0.0003200000000000001
  - 0.0013484773662551439
  - 0.004115226337448558
  - 0.010240000000000003
  - 0.022132674897119342
  - 0.043151275720164604
  - 0.07775999999999998
  - 0.13168724279835387
  - 0.21208362139917689
  - 0.3276800000000001
  - 0.48894551440329226
  - 0.708245596707819
  - 1.0
  # only used when sampling until convergence
  kwargs:
    max_steps: 10000
    check_interval: 100
    trust_threshold: 30.0
    rel_acor_threshold: 0.075

########################################################################################
# RISKS:
# Every entry in this array defines a scenario for which the stage
# `predict-risk` will compute the risks, given a set of samples
risks:
- name: ipsi-III/involved-II/early
  involvement:
    ipsi: {II: null, III: true}
  given_diagnosis:
    ipsi:   {II: true, III: false}
  given_diagnosis_spsn: [0.76, 0.81]
  t_stage: early
  invert: false
- name: ipsi-III/involved-II/late
  involvement:
    ipsi: {II: null, III: true}
  given_diagnosis:
    ipsi:   {II: true, III: false}
  given_diagnosis_spsn: [0.76, 0.81]
  t_stage: late
  invert: false

########################################################################################
# PREVALENCES:
# The structure of these scenarios is very similar to the risk.
# But here, one cannot provide a diagnose. This only computes the
# prevalence of a certain pattern of involvement for a defined
# diagnostic modality. It can, however, be compared to the prevalence
# in the data.
prevalences:
# early
- name: I/early
  pattern:
    ipsi: {I: true}
  modality: max_llh
  modality_spsn: [1.0, 1.0]
  t_stage: early

- name: InotII/early
  pattern:
    ipsi: {I: true, II: false}
  modality: max_llh
  modality_spsn: [1.0, 1.0]
  t_stage: early

- name: IandII/early
  pattern:
    ipsi: {I: true, II: true}
  modality: max_llh
  modality_spsn: [1.0, 1.0]
  t_stage: early

- name: II/early
  pattern:
    ipsi: {II: true}
  modality: max_llh
  modality_spsn: [1.0, 1.0]
  t_stage: early

- name: IInotI/early
  pattern:
    ipsi: {I: false, II: true}
  modality: max_llh
  modality_spsn: [1.0, 1.0]
  t_stage: early

- name: III/early
  pattern:
    ipsi: {III: true}
  modality: max_llh
  modality_spsn: [1.0, 1.0]
  t_stage: early

# - name: IV/early
#   pattern:
#     ipsi: {IV: true}
#   modality: max_llh
#   modality_spsn: [1.0, 1.0]
#   t_stage: early

- name: V/early
  pattern:
    ipsi: {V: true}
  modality: max_llh
  modality_spsn: [1.0, 1.0]
  t_stage: early

- name: VandIII/early
  pattern:
    ipsi: {III: true, V: true}
  modality: max_llh
  modality_spsn: [1.0, 1.0]
  t_stage: early

- name: VnotIII/early
  pattern:
    ipsi: {III: false, V: true}
  modality: max_llh
  modality_spsn: [1.0, 1.0]
  t_stage: early

# - name: VandIV/early
#   pattern:
#     ipsi: {IV: true, V: true}
#   modality: max_llh
#   modality_spsn: [1.0, 1.0]
#   t_stage: early

# - name: VnotIV/early
#   pattern:
#     ipsi: {IV: false, V: true}
#   modality: max_llh
#   modality_spsn: [1.0, 1.0]
#   t_stage: early

# - name: VII/early
#   pattern:
#     ipsi: {VII: true}
#   modality: max_llh
#   modality_spsn: [1.0, 1.0]
#   t_stage: early

# - name: VIInotII/early
#   pattern:
#     ipsi: {II: false, VII: true}
#   modality: max_llh
#   modality_spsn: [1.0, 1.0]
#   t_stage: early

# - name: VIIandII/early
#   pattern:
#     ipsi: {II: true, VII: true}
#   modality: max_llh
#   modality_spsn: [1.0, 1.0]
#   t_stage: early

# - name: VIInotIII/early
#   pattern:
#     ipsi: {III: false, VII: true}
#   modality: max_llh
#   modality_spsn: [1.0, 1.0]
#   t_stage: early

# - name: VIIandIII/early
#   pattern:
#     ipsi: {III: true, VII: true}
#   modality: max_llh
#   modality_spsn: [1.0, 1.0]
#   t_stage: early

# late
- name: I/late
  pattern:
    ipsi: {I: true}
  modality: max_llh
  modality_spsn: [1.0, 1.0]
  t_stage: late

- name: InotII/late
  pattern:
    ipsi: {I: true, II: false}
  modality: max_llh
  modality_spsn: [1.0, 1.0]
  t_stage: late

- name: IandII/late
  pattern:
    ipsi: {I: true, II: true}
  modality: max_llh
  modality_spsn: [1.0, 1.0]
  t_stage: late

- name: II/late
  pattern:
    ipsi: {II: true}
  modality: max_llh
  modality_spsn: [1.0, 1.0]
  t_stage: late

- name: IInotI/late
  pattern:
    ipsi: {I: false, II: true}
  modality: max_llh
  modality_spsn: [1.0, 1.0]
  t_stage: late

- name: III/late
  pattern:
    ipsi: {III: true}
  modality: max_llh
  modality_spsn: [1.0, 1.0]
  t_stage: late

# - name: IV/late
#   pattern:
#     ipsi: {IV: true}
#   modality: max_llh
#   modality_spsn: [1.0, 1.0]
#   t_stage: late

- name: V/late
  pattern:
    ipsi: {V: true}
  modality: max_llh
  modality_spsn: [1.0, 1.0]
  t_stage: late

- name: VandIII/late
  pattern:
    ipsi: {III: true, V: true}
  modality: max_llh
  modality_spsn: [1.0, 1.0]
  t_stage: late

- name: VnotIII/late
  pattern:
    ipsi: {III: false, V: true}
  modality: max_llh
  modality_spsn: [1.0, 1.0]
  t_stage: late

# - name: VandIV/late
#   pattern:
#     ipsi: {IV: true, V: true}
#   modality: max_llh
#   modality_spsn: [1.0, 1.0]
#   t_stage: late

# - name: VnotIV/late
#   pattern:
#     ipsi: {IV: false, V: true}
#   modality: max_llh
#   modality_spsn: [1.0, 1.0]
#   t_stage: late

# - name: VII/late
#   pattern:
#     ipsi: {VII: true}
#   modality: max_llh
#   modality_spsn: [1.0, 1.0]
#   t_stage: late

# - name: VIInotII/late
#   pattern:
#     ipsi: {II: false, VII: true}
#   modality: max_llh
#   modality_spsn: [1.0, 1.0]
#   t_stage: late

# - name: VIIandII/late
#   pattern:
#     ipsi: {II: true, VII: true}
#   modality: max_llh
#   modality_spsn: [1.0, 1.0]
#   t_stage: late

# - name: VIInotIII/late
#   pattern:
#     ipsi: {III: false, VII: true}
#   modality: max_llh
#   modality_spsn: [1.0, 1.0]
#   t_stage: late

# - name: VIIandIII/late
#   pattern:
#     ipsi: {III: true, VII: true}
#   modality: max_llh
#   modality_spsn: [1.0, 1.0]
#   t_stage: late
